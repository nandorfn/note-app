// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AuthProfile {
  id           Int      @id @default(autoincrement())
  userId       Int
  user         User     @relation(fields: [userId], references: [id])
  provider     String   // E.g., "google", "facebook", "github"
  providerId   String   // Unique ID provided by the authentication provider
  providerType String   // E.g., "oauth", "email", etc.
  email        String?  // Email associated with the authentication session
  name         String?  // User's name from the authentication session
  image        String?  // Profile image URL from the authentication session
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  email       String    @unique
  image       String?
  name        String?
  notes       Note[]
  todos       Todo[]
  trashed     Trash[]
  authProfiles AuthProfile[]
}

model Note {
  id        Int    @id @default(autoincrement())
  title     String
  content   String
  color     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User   @relation(fields: [userId], references: [id])
}

model Todo {
  id        Int    @id @default(autoincrement())
  title     String
  content   String
  color     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User   @relation(fields: [userId], references: [id])
}

model Trash {
  id          Int      @id @default(autoincrement())
  itemType    String   // Type of item: "Note" or "Todo"
  itemId      Int      // ID of the deleted item
  content     String?  // Content of the deleted item (optional)
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  deletedAt   DateTime @default(now()) // Automatically set to the current timestamp when an item is deleted
}
